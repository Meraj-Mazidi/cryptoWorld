{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","className","Title","Typography","Homepage","data","globalStats","stats","undefined","level","span","title","value","totalCoins","totalExchanges","totalMarketCap","millify","total24hVolume","totalMarkets","to","simplified","Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","src","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Option","Select","News","setNewsCategory","cryptoNews","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","i","name","news","index","xs","sm","lg","hoverable","href","target","rel","image","thumbnail","contentUrl","alt","style","maxWidth","maxHeight","description","substring","provider","moment","datePublished","startOf","fromNow","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","e","currency","uuid","rank","extra","iconUrl","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","isFetching","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","symbol","defaultValue","date","HTMLReactParser","links","link","type","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.abbf75af.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"X-RapidAPI-Key\": \"14786c3ee9mshca8d621ab4900d7p1e8a83jsnd3a90a5267c2\",\n  \"X-RapidAPI-Host\": \"coinranking1.p.rapidapi.com\",\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://coinranking1.p.rapidapi.com\" }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`coin/${coinId}/history?timeperiod=${timePeriod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../components\";\nimport Loader from \"./Loader\";\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  if (data === undefined) return <Loader />;\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Cryptocurrencies\"\n            value={globalStats.totalCoins}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={globalStats.totalExchanges}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Maket Cap\"\n            value={globalStats.totalMarketCap}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"Total Markets\" value={globalStats.totalMarkets} />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the World\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">CryptoWorld</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"X-BingApis-SDK\": \"true\",\n  \"X-RapidAPI-Key\": \"14786c3ee9mshca8d621ab4900d7p1e8a83jsnd3a90a5267c2\",\n  \"X-RapidAPI-Host\": \"bing-news-search1.p.rapidapi.com\",\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://bing-news-search1.p.rapidapi.com\",\n  }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport Loader from \"./Loader\";\n\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 20,\n  });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrencies\">Cryptocurrencies</Option>\n            {data?.data?.coins.map((coin, i) => (\n              <Option key={i} value={coin.name}>\n                {coin.name}\n              </Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, index) => (\n        <Col xs={24} sm={12} lg={8} key={index}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"newsImage\"\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)} ...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React, { useEffect, useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  if (cryptos === undefined) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrencies\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency, index) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={index}>\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt=\"cryptoIcon\"\n                  />\n                }\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n    coinTimestamp.push(\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\n    );\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price In USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\nimport LineChart from \"./LineChart\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${\n        cryptoDetails?.[\"24hVolume\"] && millify(cryptoDetails?.[\"24hVolume\"])\n      }`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${\n        cryptoDetails?.allTimeHigh?.price &&\n        millify(cryptoDetails?.allTimeHigh?.price)\n      }`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails?.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails?.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails?.supply?.confirmed ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${\n        cryptoDetails?.supply?.circulating &&\n        millify(cryptoDetails?.supply?.circulating)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails?.name} ({cryptoDetails.symbol}) Price\n        </Title>\n        <p>\n          {cryptoDetails?.name} live price in US Dollars. View value statistics,\n          market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n\n      {/* Line chart */}\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails?.name} Value Statistics\n            </Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>An overview showing the statistics of all Cryptocurrencies</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link, i) => (\n            <Row className=\"coin-link\" key={i}>\n              <Title level={5} className=\"link-name\">\n                {link.type}:\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Homepage,\n  News,\n  Cryptocurrencies,\n  CryptoDetails,\n  Navbar,\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies simplified={false} />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title\n          level={5}\n          style={{ color: \"white\", textAlign: \"center\" }}\n        >\n          Copyright © 2022 - <Link to=\"/\">Crypto World Inc. </Link> <br />\n          <a\n            href=\"https://meraj-main-portfolio.pages.dev/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Meraj Mazidi ;) <br />\n            merajmazidiwork@gmail.com\n          </a>\n          <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}